test_duration: 100

prepare_write_cmd:  ["scylla-bench -workload=sequential -mode=write -replication-factor=3 -partition-count=100 -clustering-row-count=55                       -clustering-row-size=uniform:1024..2048 -concurrency=5 -connection-count=10 -consistency-level=quorum -rows-per-request=10 -timeout=30s -validate-data"]

prepare_verify_cmd: ["scylla-bench -workload=sequential -mode=read -replication-factor=3 -partition-count=25 -clustering-row-count=55                      -clustering-row-size=uniform:1024..2048 -concurrency=5 -connection-count=10 -consistency-level=quorum -rows-per-request=10 -timeout=30s -iterations 1 -validate-data"]

stress_cmd: ["scylla-bench -workload=sequential -mode=read  -replication-factor=3 -partition-count=25 -clustering-row-count=55 -partition-offset=10   -clustering-row-size=uniform:1024..2048   -concurrency=5 -connection-count=10 -consistency-level=quorum -rows-per-request=10 -timeout=30s -retry-number=30 -retry-interval=80ms,1s -iterations 0 -duration=20m -validate-data"]

post_prepare_cql_cmds: "CREATE MATERIALIZED VIEW scylla_bench.view_test AS SELECT * FROM scylla_bench.test where ck IS NOT NULL AND pk is not null PRIMARY KEY (pk, ck) with comment = 'TEST VIEW'"

n_db_nodes: 3
n_loaders: 1
n_monitor_nodes: 1

instance_type_db: 'i3.xlarge'

nemesis_class_name: 'SisyphusMonkey'
nemesis_seed: '013'
nemesis_interval: 2
nemesis_during_prepare: false

user_prefix: 'longevity-large-partitions-3h'

space_node_threshold: 644

# To validate rows in partitions: collect data about partitions and their rows amount
# before and after running nemesis and compare it
data_validation: |
  validate_partitions: true
  table_name: "scylla_bench.test"
  primary_key_column: "pk"
  max_partitions_in_test_table: 100
  partition_range_with_data_validation: 0-25
  limit_rows_number: 60
