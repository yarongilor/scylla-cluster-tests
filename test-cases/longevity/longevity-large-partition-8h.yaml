test_duration: 600

bench_run: true
max_partitions_in_test_table: 400
partition_range_with_data_validation: 0-100
prepare_write_cmd:  ["scylla-bench -workload=sequential -mode=write -replication-factor=3 -partition-count=100 -clustering-row-count=1000 -clustering-row-size=uniform:1024..2048 -concurrency=10 -connection-count=10 -consistency-level=quorum -rows-per-request=10 -timeout=30s -validate-data"]

stress_cmd: ["scylla-bench -workload=sequential -mode=write -replication-factor=3 -partition-count=100 -clustering-row-count=1000 -clustering-row-size=uniform:10..1024  -concurrency=10  -connection-count=10  -consistency-level=quorum -rows-per-request=10 -timeout=30s -retry-number=30 -retry-interval=80ms,1s -iterations 0 -duration=480m"]

# Create MV + Set tombstone_gc to 'repair' + a propagation_delay_in_seconds of 5 minutes for the tombstone-gc-verification table:
post_prepare_cql_cmds: [
                        "CREATE MATERIALIZED VIEW scylla_bench.view_test AS SELECT * FROM scylla_bench.test where pk is not null and ck is not null PRIMARY KEY(pk, ck) with comment = 'TEST VIEW'",
                        "ALTER TABLE scylla_bench.test with tombstone_gc = {'mode': 'repair', 'propagation_delay_in_seconds':'300'};"
                        ]

n_db_nodes: 3
n_loaders: 1
n_monitor_nodes: 1

round_robin: true

instance_type_db: 'i3.large'

nemesis_class_name: 'SisyphusMonkey'
nemesis_seed: '015'
nemesis_interval: 2

user_prefix: 'test-gc-verification'

space_node_threshold: 644

# Run a verification every 10 minutes:
run_tombstone_gc_verification: '{"ks_cf": "scylla_bench.test", "interval": 300, "propagation_delay_in_seconds": 100}' # 'ks.cf, interval(sec), propagation_delay_in_seconds(sec)'
