test_duration: 3000
bench_run: true

stress_cmd: ["scylla-bench -workload=timeseries -mode=write -replication-factor=2 -partition-count=4000 -clustering-row-count=10000 -clustering-row-size=200 -concurrency=15 -rows-per-request=1 -start-timestamp=SET_WRITE_TIMESTAMP -connection-count 10 -max-rate 30000 -timeout=120s -retry-number=30 -retry-interval=80ms,1s -duration=2880m"]
# write-rate with timeseries workload for read mode
# calculated from timeseries workload for write mode by formula:
# write-rate = -max-rate / -concurrency = 30000 / 150 = 200
stress_read_cmd: [
    "scylla-bench -workload=timeseries -mode=read -partition-count=4000 -concurrency=15 -replication-factor=3 -clustering-row-count=10000 -clustering-row-size=200  -rows-per-request=1 -start-timestamp=GET_WRITE_TIMESTAMP -write-rate 200 -distribution hnormal --connection-count 10 -duration=2880m -timeout=30s -retry-number=30 -retry-interval=80ms,1s",
    ]


n_db_nodes: 2
n_loaders: 1
n_monitor_nodes: 0

instance_type_db: 'i3.xlarge'

nemesis_class_name: 'DeleteByRowsRangeMonkey'
nemesis_seed: '025'
nemesis_interval: 5
nemesis_during_prepare: true
space_node_threshold: 64

user_prefix: 'use-paged-query2-dbg'

post_prepare_cql_cmds: "ALTER TABLE scylla_bench.test with gc_grace_seconds = 200 and default_time_to_live = 200 and compaction = {'class':'TimeWindowCompactionStrategy', 'compaction_window_size': 60, 'compaction_window_unit': 'MINUTES'};"

max_partitions_in_test_table: 20
round_robin: true
