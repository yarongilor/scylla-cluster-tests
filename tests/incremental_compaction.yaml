test_duration: 10000

n_db_nodes: 2
n_loaders: 1
n_monitor_nodes: 1
gce_datacenter: 'us-east1-b'

#scylla_repo: https://s3.amazonaws.com/downloads.scylladb.com/enterprise/rpm/unstable/centos/master/68/scylla.repo

# workloads
stress_cmd: "cassandra-stress write no-warmup cl=ALL duration=30m -schema 'replication(factor=2)' -port jmx=6868 -mode cql3 native -rate threads=1 limit=40/s -col 'size=FIXED(1048576) n=FIXED(1)' -pop seq=1..9000000000"
cs_throughput_limit_mb: 40
cs_col_size_kb: 1024 # 1 MB

#prepare_write_stress: cassandra-stress write no-warmup cl=QUORUM n=10000000 -schema 'replication(factor=3) compression=LZ4Compressor' -port jmx=6868 -mode cql3 native compression=lz4 -rate threads=1000 -pop seq=1..10000000 -log interval=5
#stress_cmd_read_10m: cassandra-stress read no-warmup cl=QUORUM duration=10m -schema 'replication(factor=3) compression=SnappyCompressor' -port jmx=6868 -mode cql3 native compression=snappy -rate threads=1000 -pop seq=1..10000000 -log interval=5
#stress_cmd_read_clall: cassandra-stress read no-warmup cl=ALL n=10000000 -schema 'replication(factor=3) compression=DeflateCompressor' -port jmx=6868 -mode cql3 native compression=none -rate threads=1000 -pop seq=1..10000000 -log interval=5
#stress_cmd_read_20m: cassandra-stress read no-warmup cl=QUORUM duration=20m -schema 'replication(factor=3) compression=LZ4Compressor' -port jmx=6868 -mode cql3 native compression=lz4 -rate threads=1000 -pop seq=1..10000000 -log interval=5
#stress_cmd_sst3_prepare: cassandra-stress user no-warmup profile=/tmp/sst3_schema.yaml  ops'(insert=1)' cl=QUORUM n=10000000 -rate threads=1000 -pop seq=1..10000000
#stress_cmd_sst3_verify_read: cassandra-stress user no-warmup profile=/tmp/sst3_schema.yaml  ops'(read1=1)' cl=ALL n=10000000 -rate threads=1000 -pop seq=1..10000000
#stress_cmd_sst3_verify_more: cassandra-stress user no-warmup profile=/tmp/sst3_schema.yaml  ops'(read1=1,read2=1,update_static=1,update_ttl=1,update_diff1_ts=1,update_diff2_ts=1,update_same1_ts=1,update_same2_ts=1)' cl=ALL n=10000000 -rate threads=200 -pop seq=1..10000000
#stress_cmd_sst3_verify_delete: cassandra-stress user no-warmup profile=/tmp/sst3_schema.yaml  ops'(delete_row=1)' cl=ALL n=1000000 -rate threads=200 -pop seq=1..1000000

user_prefix: 'incremental-compaction'
failure_post_behavior: keep # destroy

experimental: 'true'
ip_ssh_connections: 'public' # 'private'
#authenticator: 'PasswordAuthenticator'
#authenticator_user: 'cassandra'
#authenticator_password: 'cassandra'
#authorizer: 'ScyllaAuthorizer'

backends: !mux
    gce: !mux
        cluster_backend: 'gce'
        user_credentials_path: '~/.ssh/scylla-test'
        gce_network: 'qa-vpc'
        gce_image: 'https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/family/centos-7'
        gce_image_username: 'scylla-test'
        gce_instance_type_db: 'n1-standard-2'
        gce_root_disk_type_db: 'pd-ssd'
        gce_root_disk_size_db: 50
        gce_n_local_ssd_disk_db: 1
        gce_instance_type_loader: 'n1-standard-1'
        gce_root_disk_type_loader: 'pd-standard'
        gce_root_disk_size_loader: 50
        gce_n_local_ssd_disk_loader: 0
        gce_instance_type_monitor: 'n1-standard-2'
        gce_root_disk_type_monitor: 'pd-standard'
        gce_root_disk_size_monitor: 50
        gce_n_local_ssd_disk_monitor: 0
    aws: !mux
        # What is the backend that the suite will use to get machines from.
        cluster_backend: 'aws'
        # From 0.19 on, iotune will require bigger disk, so let's use a big
        # loader instance by default.
        instance_type_loader: 'c4.large'
        # Size of AWS monitor instance
        instance_type_monitor: 't2.small' # 'i3.large'
        us_east_1:
            user_credentials_path: '~/.ssh/scylla-qa-ec2'
            region_name: 'us-east-1'
            security_group_ids: 'sg-c5e1f7a0'
            subnet_id: 'subnet-ec4a72c4'
            # ami_id_db_scylla: 'ami-04c7c8f4ab9be4cfd' # enterprise-2019.1 # 'ami-9887c6e7' # Clean CentOs 7
            ami_id_db_scylla: 'ami-04c7c8f4ab9be4cfd'
            ami_db_scylla_user: 'centos'
            ami_id_loader: 'ami-0fc423ac17a75570d'
            ami_loader_user: 'centos'
            # ami_id_monitor: 'ami-010f2b2749b78a6c5' # scylla-enterprise ami # 'ami-9887c6e7' # Clean CentOs 7
            ami_id_monitor: 'ami-010f2b2749b78a6c5'
            ami_monitor_user: 'centos'

databases: !mux
    scylla:
        db_type: scylla
        instance_type_db: 'i3.large'

