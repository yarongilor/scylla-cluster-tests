### DML ###

keyspace: keyspace1

keyspace_definition: |
  CREATE KEYSPACE IF NOT EXISTS keyspace1 WITH replication = {'class': 'NetworkTopologyStrategy', 'replication_factor': 3}

table: standard2

table_definition: |
  CREATE TABLE standard2 (
      key blob,
      c0 blob,
      c1 blob,
      c2 blob,
      c3 blob,
      c4 blob,
      PRIMARY KEY (key)
    )  WITH compaction = {'class': 'LeveledCompactionStrategy'};

#extra_definitions:
#  - CREATE INDEX IF NOT EXISTS sec_ind_c2 ON keyspace1.standard2 (c2)
#  - CREATE INDEX IF NOT EXISTS sec_ind_c3 ON keyspace1.standard2 (c3)

### Column Distribution Specifications ###
columnspec:
  - name: key
    size: fixed(10)
    population: uniform(1..10M)

  - name: c0
    size: fixed(1024)

  - name: c1
    size: fixed(1024)

  - name: c2
    size: fixed(1024)

  - name: c3
    size: fixed(1024)

  - name: c4
    size: fixed(1024)

insert:
  partitions: fixed(1)
  select:    fixed(1)/1
  batchtype: UNLOGGED

queries:
  insert:
    cql: insert into keyspace1.standard2 (key, c0, c1, c2, c3, c4) values (?,?,?,?,?,?)
    fields: samerow
  read:
    cql: select * from keyspace1.standard2 where key=?
    fields: samerow
#  si_read1:
#    cql: select * from keyspace1.standard2 where c2 = ? LIMIT 1
#    fields: samerow
#  si_read2:
#    cql: select * from keyspace1.standard2 where c3 = ? LIMIT 1
#    fields: samerow
